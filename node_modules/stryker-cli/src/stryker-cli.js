"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var path = require("path");
var chalk_1 = require("chalk");
var inquirer = require("inquirer");
var child = require("child_process");
var NodeWrapper_1 = require("./NodeWrapper");
var resolve = require("resolve");
var installCommands = {
    npm: 'npm install --save-dev @stryker-mutator/core',
    yarn: 'yarn add @stryker-mutator/core --dev'
};
function run() {
    try {
        return runLocalStryker();
    }
    catch (error) {
        if (error.toString().indexOf("Cannot find module '@stryker-mutator/core") >= 0) {
            return promptInstallStryker().then(function (packageManager) {
                if (packageManager !== undefined) {
                    installStryker(installCommands[packageManager]);
                    runLocalStryker();
                }
            });
        }
        else {
            // Oops, other error
            return Promise.reject(error);
        }
    }
}
exports.run = run;
function runLocalStryker() {
    var stryker = localStryker();
    NodeWrapper_1.default.require(stryker);
    return Promise.resolve();
}
function localStryker() {
    var stryker = resolve.sync('@stryker-mutator/core/package.json', { basedir: NodeWrapper_1.default.cwd() });
    var dirname = path.dirname(stryker);
    return path.resolve(dirname, './bin/stryker');
}
function promptInstallStryker() {
    NodeWrapper_1.default.log(chalk_1.default.yellow('Stryker is currently not installed.'));
    return inquirer.prompt([{
            choices: ['npm', 'yarn', 'no'],
            default: 'npm',
            message: 'Do you want to install Stryker locally?',
            name: 'install',
            type: 'list'
        }]).then(function (answers) {
        if (answers.install === 'no') {
            NodeWrapper_1.default.log("Ok, I don't agree, but I understand. You can install Stryker manually using " + chalk_1.default.blue(installCommands.npm) + ".");
            return undefined;
        }
        else {
            return answers.install;
        }
    });
}
function installStryker(installCommand) {
    printStrykerASCII();
    executeInstallStrykerProcess(installCommand);
}
function printStrykerASCII() {
    var strykerASCII = '\n' +
        chalk_1.default.yellow('             |STRYKER|              ') + '\n' +
        chalk_1.default.yellow('       ~control the mutants~        ') + '\n' + '\n' +
        chalk_1.default.red('           ..####') + chalk_1.default.white('@') + chalk_1.default.red('####..            ') + '\n' +
        chalk_1.default.red('        .########') + chalk_1.default.white('@') + chalk_1.default.red('########.         ') + '\n' +
        chalk_1.default.red('      .#####################.       ') + '\n' +
        chalk_1.default.red('     #########') + chalk_1.default.yellow('#######') + chalk_1.default.red('#########      ') + '\n' +
        chalk_1.default.red('    #########') + chalk_1.default.yellow('##') + chalk_1.default.red('#####') + chalk_1.default.yellow('##') + chalk_1.default.red('#########     ') + '\n' +
        chalk_1.default.red('    #########') + chalk_1.default.yellow('##') + chalk_1.default.red('################     ') + '\n' +
        chalk_1.default.red('    ') + chalk_1.default.white('@@@') + chalk_1.default.red('#######') + chalk_1.default.yellow('#######') + chalk_1.default.red('#######') + chalk_1.default.white('@@@') + chalk_1.default.red('     ') + '\n' +
        chalk_1.default.red('    ################') + chalk_1.default.yellow('##') + chalk_1.default.red('#########     ') + '\n' +
        chalk_1.default.red('    #########') + chalk_1.default.yellow('##') + chalk_1.default.red('#####') + chalk_1.default.yellow('##') + chalk_1.default.red('#########     ') + '\n' +
        chalk_1.default.red('     #########') + chalk_1.default.yellow('#######') + chalk_1.default.red('#########      ') + '\n' +
        chalk_1.default.red("      '######################'      ") + '\n' +
        chalk_1.default.red("        '########") + chalk_1.default.white('@') + chalk_1.default.red("#########'        ") + '\n' +
        chalk_1.default.red("           ''####") + chalk_1.default.white('@') + chalk_1.default.red("####''            ") + '\n';
    NodeWrapper_1.default.log(strykerASCII);
}
function executeInstallStrykerProcess(installCommand) {
    NodeWrapper_1.default.log(chalk_1.default.grey('Installing:') + " " + installCommand);
    child.execSync(installCommand, { stdio: [0, 1, 2] });
    NodeWrapper_1.default.log(chalk_1.default.green('Stryker installation done.'));
}
//# sourceMappingURL=stryker-cli.js.map