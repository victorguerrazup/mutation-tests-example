"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.aggregateResultsByModule = void 0;
const helpers_1 = require("./helpers");
/**
 * Aggregates multiple reports together into a single report, grouped by module.
 *
 * @param resultsByModule The MutationTestResult objects by module name
 * @returns An aggregated result of all provided reports.
 */
function aggregateResultsByModule(resultsByModule) {
    var _a, _b;
    const projectRoots = Object.values(resultsByModule)
        .map((report) => report.projectRoot)
        .filter(helpers_1.isNotNullish);
    const aggregatedResult = {
        files: {},
        schemaVersion: '1.7',
        thresholds: (_b = (_a = resultsByModule[0]) === null || _a === void 0 ? void 0 : _a.thresholds) !== null && _b !== void 0 ? _b : { high: 80, low: 60 },
        projectRoot: projectRoots.length ? (0, helpers_1.determineCommonBasePath)(projectRoots) : undefined,
        config: {},
    };
    return Object.entries(resultsByModule).reduce((acc, [moduleName, report]) => {
        var _a;
        Object.entries((0, helpers_1.normalizeFileNames)(report.files)).forEach(([fileName, fileResult]) => {
            aggregatedResult.files[`${moduleName}/${fileName}`] = fileResult;
        });
        if (report.testFiles) {
            const aggregatedTestFiles = (_a = aggregatedResult.testFiles) !== null && _a !== void 0 ? _a : (aggregatedResult.testFiles = Object.create(null));
            Object.entries((0, helpers_1.normalizeFileNames)(report.testFiles)).forEach(([fileName, testFileResult]) => {
                aggregatedTestFiles[`${moduleName}/${fileName}`] = testFileResult;
            });
        }
        return acc;
    }, aggregatedResult);
}
exports.aggregateResultsByModule = aggregateResultsByModule;
//# sourceMappingURL=aggregate.js.map