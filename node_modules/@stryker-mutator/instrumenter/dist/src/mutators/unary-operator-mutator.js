"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unaryOperatorMutator = void 0;
const tslib_1 = require("tslib");
const types = (0, tslib_1.__importStar)(require("@babel/types"));
var UnaryOperator;
(function (UnaryOperator) {
    UnaryOperator["+"] = "-";
    UnaryOperator["-"] = "+";
    UnaryOperator["~"] = "";
})(UnaryOperator || (UnaryOperator = {}));
exports.unaryOperatorMutator = {
    name: 'UnaryOperator',
    *mutate(path) {
        if (path.isUnaryExpression() && isSupported(path.node.operator) && path.node.prefix) {
            const mutatedOperator = UnaryOperator[path.node.operator];
            const replacement = mutatedOperator.length
                ? types.unaryExpression(mutatedOperator, path.node.argument)
                : types.cloneNode(path.node.argument, true);
            yield replacement;
        }
    },
};
function isSupported(operator) {
    return Object.keys(UnaryOperator).includes(operator);
}
//# sourceMappingURL=unary-operator-mutator.js.map