"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stringLiteralMutator = void 0;
const core_1 = require("@babel/core");
exports.stringLiteralMutator = {
    name: 'StringLiteral',
    *mutate(path) {
        if (path.isTemplateLiteral()) {
            const replacement = path.node.quasis.length === 1 && path.node.quasis[0].value.raw.length === 0 ? 'Stryker was here!' : '';
            yield core_1.types.templateLiteral([core_1.types.templateElement({ raw: replacement })], []);
        }
        if (path.isStringLiteral() && isValidParent(path)) {
            yield core_1.types.stringLiteral(path.node.value.length === 0 ? 'Stryker was here!' : '');
        }
    },
};
function isValidParent(child) {
    const parent = child.parent;
    return !(core_1.types.isImportDeclaration(parent) ||
        core_1.types.isExportDeclaration(parent) ||
        core_1.types.isModuleDeclaration(parent) ||
        core_1.types.isTSExternalModuleReference(parent) ||
        core_1.types.isJSXAttribute(parent) ||
        core_1.types.isExpressionStatement(parent) ||
        core_1.types.isTSLiteralType(parent) ||
        core_1.types.isObjectMethod(parent) ||
        (core_1.types.isObjectProperty(parent) && parent.key === child.node) ||
        (core_1.types.isClassProperty(parent) && parent.key === child.node) ||
        (core_1.types.isCallExpression(parent) && core_1.types.isIdentifier(parent.callee, { name: 'require' })));
}
//# sourceMappingURL=string-literal-mutator.js.map