"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.throwPlacementError = void 0;
const tslib_1 = require("tslib");
const path_1 = (0, tslib_1.__importDefault)(require("path"));
const util_1 = require("@stryker-mutator/util");
function throwPlacementError(error, nodePath, placer, mutants, fileName) {
    var _a, _b;
    const location = `${path_1.default.relative(process.cwd(), fileName)}:${(_a = nodePath.node.loc) === null || _a === void 0 ? void 0 : _a.start.line}:${(_b = nodePath.node.loc) === null || _b === void 0 ? void 0 : _b.start.column}`;
    const message = `${placer.name} could not place mutants with type(s): "${mutants.map((mutant) => mutant.mutatorName).join(', ')}"`;
    const errorMessage = `${location} ${message}. Either remove this file from the list of files to be mutated, or exclude the mutator (using ${util_1.PropertyPathBuilder.create()
        .prop('mutator')
        .prop('excludedMutations')
        .build()}). Please report this issue at https://github.com/stryker-mutator/stryker-js/issues/new?assignees=&labels=%F0%9F%90%9B+Bug&template=bug_report.md&title=${encodeURIComponent(message)}. Original error: ${error.stack}`;
    let builtError = new Error(errorMessage);
    try {
        // `buildCodeFrameError` is kind of flaky, see https://github.com/stryker-mutator/stryker-js/issues/2695
        builtError = nodePath.buildCodeFrameError(errorMessage);
    }
    catch {
        // Idle, regular error will have to suffice
    }
    throw builtError;
}
exports.throwPlacementError = throwPlacementError;
//# sourceMappingURL=throw-placement-error.js.map