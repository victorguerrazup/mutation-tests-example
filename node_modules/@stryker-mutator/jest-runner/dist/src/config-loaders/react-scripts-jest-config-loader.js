"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReactScriptsJestConfigLoader = void 0;
const tslib_1 = require("tslib");
const path_1 = (0, tslib_1.__importDefault)(require("path"));
const plugin_1 = require("@stryker-mutator/api/plugin");
const util_1 = require("@stryker-mutator/util");
const pluginTokens = (0, tslib_1.__importStar)(require("../plugin-tokens"));
class ReactScriptsJestConfigLoader {
    constructor(resolve) {
        this.resolve = resolve;
    }
    loadConfig() {
        try {
            // Create the React configuration for Jest
            const jestConfiguration = this.createJestConfig();
            return jestConfiguration;
        }
        catch (e) {
            if (this.isNodeErrnoException(e) && e.code === 'MODULE_NOT_FOUND') {
                throw Error(`Unable to locate package "react-scripts". This package is required when "${util_1.PropertyPathBuilder.create()
                    .prop('jest')
                    .prop('projectType')
                    .build()}" is set to "create-react-app".`);
            }
            throw e;
        }
    }
    isNodeErrnoException(arg) {
        return arg.code !== undefined;
    }
    createJestConfig() {
        const createReactJestConfig = (0, util_1.requireResolve)('react-scripts/scripts/utils/createJestConfig');
        const reactScriptsLocation = path_1.default.join(this.resolve('react-scripts/package.json'), '..');
        return createReactJestConfig((relativePath) => path_1.default.join(reactScriptsLocation, relativePath), process.cwd(), false);
    }
}
exports.ReactScriptsJestConfigLoader = ReactScriptsJestConfigLoader;
ReactScriptsJestConfigLoader.inject = (0, plugin_1.tokens)(pluginTokens.resolve);
//# sourceMappingURL=react-scripts-jest-config-loader.js.map