"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeMutantCoverage = void 0;
function mergeCoverageData(target, source) {
    Object.keys(source).forEach((mutantId) => {
        const mutantIdNumber = parseInt(mutantId, 10);
        if (target[mutantIdNumber]) {
            target[mutantIdNumber] += source[mutantIdNumber];
        }
        else {
            target[mutantIdNumber] = source[mutantIdNumber];
        }
    });
}
function mergeMutantCoverage(target, source) {
    if (source) {
        mergeCoverageData(target.static, source.static);
        Object.keys(source.perTest).forEach((testId) => {
            if (!target.perTest[testId]) {
                target.perTest[testId] = {};
            }
            mergeCoverageData(target.perTest[testId], source.perTest[testId]);
        });
    }
}
exports.mergeMutantCoverage = mergeMutantCoverage;
//# sourceMappingURL=merge-mutant-coverage.js.map