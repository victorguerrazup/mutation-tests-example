"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withCoverageAnalysis = void 0;
const tslib_1 = require("tslib");
const util_1 = require("@stryker-mutator/util");
const semver_1 = (0, tslib_1.__importDefault)(require("semver"));
const messaging_1 = require("../messaging");
const utils_1 = require("../utils");
/**
 * Jest's defaults.
 * @see https://jestjs.io/docs/en/configuration
 */
function getJestDefaults() {
    // New defaults since 27: https://jestjs.io/blog/2021/05/25/jest-27
    if (semver_1.default.satisfies(utils_1.jestWrapper.getVersion(), '>=27')) {
        return {
            testRunner: 'jest-circus/runner',
            testEnvironment: 'node',
        };
    }
    else {
        return {
            // the defaults before v27
            testRunner: 'jest-jasmine2',
            testEnvironment: 'jsdom',
        };
    }
}
function withCoverageAnalysis(jestConfig, coverageAnalysis) {
    // Override with Stryker specific test environment to capture coverage analysis
    if (coverageAnalysis === 'off') {
        return jestConfig;
    }
    else {
        const overrides = {};
        overrideEnvironment(jestConfig, overrides);
        if (coverageAnalysis === 'perTest') {
            setupFramework(jestConfig, overrides);
        }
        return { ...jestConfig, ...overrides };
    }
}
exports.withCoverageAnalysis = withCoverageAnalysis;
/**
 * Setup the test framework (aka "runner" in jest terms) for "perTest" coverage analysis.
 * Will use monkey patching for framework "jest-jasmine2", and will assume the test environment handles events when "jest-circus"
 */
function setupFramework(jestConfig, overrides) {
    var _a, _b;
    const testRunner = (_a = jestConfig.testRunner) !== null && _a !== void 0 ? _a : getJestDefaults().testRunner;
    if (testRunner === 'jest-jasmine2') {
        overrides.setupFilesAfterEnv = [require.resolve('./jasmine2-setup-coverage-analysis'), ...((_b = jestConfig.setupFilesAfterEnv) !== null && _b !== void 0 ? _b : [])];
    }
    else if (!testRunner.includes('jest-circus')) {
        // 'jest-circus/runner' is supported, via handleTestEvent, see https://jestjs.io/docs/en/configuration#testenvironment-string
        // Use includes here, since "react-scripts" will specify the full path to `jest-circus`, see https://github.com/stryker-mutator/stryker-js/issues/2789
        throw new Error(`The @stryker-mutator/jest-runner doesn't support ${(0, util_1.propertyPath)('coverageAnalysis')} "perTest" with "jestConfig.testRunner": "${jestConfig.testRunner}". Please open an issue if you want support for this: https://github.com/stryker-mutator/stryker-js/issues`);
    }
}
function overrideEnvironment(jestConfig, overrides) {
    var _a;
    const originalJestEnvironment = (_a = jestConfig.testEnvironment) !== null && _a !== void 0 ? _a : getJestDefaults().testEnvironment;
    messaging_1.state.jestEnvironment = nameEnvironment(originalJestEnvironment);
    overrides.testEnvironment = require.resolve('./jest-environment-generic');
}
function nameEnvironment(shortName) {
    return ['node', 'jsdom'].includes(shortName) ? `jest-environment-${shortName}` : shortName;
}
//# sourceMappingURL=with-coverage-analysis.js.map