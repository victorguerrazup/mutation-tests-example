"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckerWorker = void 0;
const check_1 = require("@stryker-mutator/api/check");
const plugin_1 = require("@stryker-mutator/api/plugin");
const util_1 = require("@stryker-mutator/util");
const di_1 = require("../di");
class CheckerWorker {
    constructor(options, injector) {
        this.innerCheckers = [];
        const pluginCreator = injector.injectFunction(di_1.PluginCreator.createFactory(plugin_1.PluginKind.Checker));
        this.innerCheckers = options.checkers.map((name) => ({ name, checker: pluginCreator.create(name) }));
    }
    async init() {
        for await (const { name, checker } of this.innerCheckers) {
            try {
                await checker.init();
            }
            catch (error) {
                throw new util_1.StrykerError(`An error occurred during initialization of the "${name}" checker`, error);
            }
        }
    }
    async check(mutant) {
        for await (const { checker } of this.innerCheckers) {
            const result = await checker.check(mutant);
            if (result.status !== check_1.CheckStatus.Passed) {
                return result;
            }
        }
        return { status: check_1.CheckStatus.Passed };
    }
}
exports.CheckerWorker = CheckerWorker;
CheckerWorker.inject = (0, plugin_1.tokens)(plugin_1.commonTokens.options, plugin_1.commonTokens.injector);
//# sourceMappingURL=checker-worker.js.map