"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrepareExecutor = void 0;
const plugin_1 = require("@stryker-mutator/api/plugin");
const logging_1 = require("../logging");
const di_1 = require("../di");
const input_1 = require("../input");
const errors_1 = require("../errors");
class PrepareExecutor {
    constructor(cliOptions, injector) {
        this.cliOptions = cliOptions;
        this.injector = injector;
    }
    async execute() {
        logging_1.LogConfigurator.configureMainProcess(this.cliOptions.logLevel, this.cliOptions.fileLogLevel, this.cliOptions.allowConsoleColors);
        const mainInjector = (0, di_1.buildMainInjector)(this.injector);
        const options = mainInjector.resolve(plugin_1.commonTokens.options);
        const loggingContext = await logging_1.LogConfigurator.configureLoggingServer(options.logLevel, options.fileLogLevel, options.allowConsoleColors);
        const inputFiles = await mainInjector.injectClass(input_1.InputFileResolver).resolve();
        if (inputFiles.files.length) {
            mainInjector.resolve(di_1.coreTokens.temporaryDirectory).initialize();
            return mainInjector.provideValue(di_1.coreTokens.inputFiles, inputFiles).provideValue(di_1.coreTokens.loggingContext, loggingContext);
        }
        else {
            throw new errors_1.ConfigError('No input files found.');
        }
    }
}
exports.PrepareExecutor = PrepareExecutor;
PrepareExecutor.inject = (0, plugin_1.tokens)(di_1.coreTokens.cliOptions, plugin_1.commonTokens.injector);
//# sourceMappingURL=1-prepare-executor.js.map