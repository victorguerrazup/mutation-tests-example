"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTestRunnerFactory = void 0;
const plugin_1 = require("@stryker-mutator/api/plugin");
const di_1 = require("../di");
const retry_rejected_decorator_1 = require("./retry-rejected-decorator");
const timeout_decorator_1 = require("./timeout-decorator");
const child_process_test_runner_proxy_1 = require("./child-process-test-runner-proxy");
const command_test_runner_1 = require("./command-test-runner");
const max_test_runner_reuse_decorator_1 = require("./max-test-runner-reuse-decorator");
createTestRunnerFactory.inject = (0, plugin_1.tokens)(plugin_1.commonTokens.options, di_1.coreTokens.sandbox, di_1.coreTokens.loggingContext, plugin_1.commonTokens.getLogger);
function createTestRunnerFactory(options, sandbox, loggingContext, getLogger) {
    if (command_test_runner_1.CommandTestRunner.is(options.testRunner)) {
        return () => new retry_rejected_decorator_1.RetryRejectedDecorator(() => new timeout_decorator_1.TimeoutDecorator(() => new command_test_runner_1.CommandTestRunner(sandbox.workingDirectory, options)));
    }
    else {
        return () => new retry_rejected_decorator_1.RetryRejectedDecorator(() => new max_test_runner_reuse_decorator_1.MaxTestRunnerReuseDecorator(() => new timeout_decorator_1.TimeoutDecorator(() => new child_process_test_runner_proxy_1.ChildProcessTestRunnerProxy(options, sandbox.workingDirectory, loggingContext, getLogger(child_process_test_runner_proxy_1.ChildProcessTestRunnerProxy.name))), options));
    }
}
exports.createTestRunnerFactory = createTestRunnerFactory;
//# sourceMappingURL=index.js.map