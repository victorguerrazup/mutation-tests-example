"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChildProcessTestRunnerProxy = void 0;
const util_1 = require("@stryker-mutator/util");
const child_process_crashed_error_1 = require("../child-proxy/child-process-crashed-error");
const child_process_proxy_1 = require("../child-proxy/child-process-proxy");
const child_process_test_runner_worker_1 = require("./child-process-test-runner-worker");
const MAX_WAIT_FOR_DISPOSE = 2000;
/**
 * Runs the given test runner in a child process and forwards reports about test results
 */
class ChildProcessTestRunnerProxy {
    constructor(options, sandboxWorkingDirectory, loggingContext, log) {
        this.log = log;
        this.worker = child_process_proxy_1.ChildProcessProxy.create(require.resolve('./child-process-test-runner-worker'), loggingContext, options, {}, sandboxWorkingDirectory, child_process_test_runner_worker_1.ChildProcessTestRunnerWorker, options.testRunnerNodeArgs);
    }
    init() {
        return this.worker.proxy.init();
    }
    dryRun(options) {
        return this.worker.proxy.dryRun(options);
    }
    mutantRun(options) {
        return this.worker.proxy.mutantRun(options);
    }
    async dispose() {
        await util_1.ExpirableTask.timeout(
        // First let the inner test runner dispose
        this.worker.proxy.dispose().catch((error) => {
            // It's OK if the child process is already down.
            if (!(error instanceof child_process_crashed_error_1.ChildProcessCrashedError)) {
                // Handle error by logging it. We still want to kill the child process.
                this.log.warn('An unexpected error occurred during test runner disposal. This might be worth looking into. Stryker will ignore this error.', error);
            }
        }), 
        // ... but don't wait forever on that
        MAX_WAIT_FOR_DISPOSE);
        // After that, dispose the child process itself
        await this.worker.dispose();
    }
}
exports.ChildProcessTestRunnerProxy = ChildProcessTestRunnerProxy;
//# sourceMappingURL=child-process-test-runner-proxy.js.map