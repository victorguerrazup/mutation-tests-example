/// <reference types="node" />
import execa from 'execa';
import { PartialStrykerOptions } from '@stryker-mutator/api/core';
import { Injector, PluginContext, PluginKind } from '@stryker-mutator/api/plugin';
import { Reporter } from '@stryker-mutator/api/report';
import { I } from '@stryker-mutator/util';
import { TemporaryDirectory } from '../utils/temporary-directory';
import { Timer } from '../utils/timer';
import { UnexpectedExitHandler } from '../unexpected-exit-handler';
import { coreTokens, PluginCreator } from '.';
export interface MainContext extends PluginContext {
    [coreTokens.reporter]: Required<Reporter>;
    [coreTokens.pluginCreatorReporter]: PluginCreator<PluginKind.Reporter>;
    [coreTokens.pluginCreatorChecker]: PluginCreator<PluginKind.Checker>;
    [coreTokens.timer]: I<Timer>;
    [coreTokens.temporaryDirectory]: I<TemporaryDirectory>;
    [coreTokens.execa]: typeof execa;
    [coreTokens.process]: NodeJS.Process;
    [coreTokens.unexpectedExitRegistry]: I<UnexpectedExitHandler>;
}
declare type PluginResolverProvider = Injector<PluginContext>;
export declare type CliOptionsProvider = Injector<Pick<MainContext, 'getLogger' | 'logger'> & {
    [coreTokens.cliOptions]: PartialStrykerOptions;
}>;
export declare function buildMainInjector(injector: CliOptionsProvider): Injector<MainContext>;
export declare namespace buildMainInjector {
    var inject: ["$injector"];
}
export declare function createPluginResolverProvider(parent: CliOptionsProvider): PluginResolverProvider;
export {};
//# sourceMappingURL=build-main-injector.d.ts.map