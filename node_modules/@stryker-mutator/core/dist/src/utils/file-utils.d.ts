import mkdirpModule from 'mkdirp';
export declare const MAX_CONCURRENT_FILE_IO = 256;
export declare const mkdirp: typeof mkdirpModule;
export declare function glob(expression: string): Promise<string[]>;
export declare const deleteDir: (arg1: string) => Promise<void>;
export declare function cleanFolder(folderName: string): Promise<string | undefined>;
/**
 * Wrapper around the 'require' function (for testability)
 */
export declare function importModule(moduleName: string): unknown;
/**
 * Recursively walks the from directory and copy the content to the target directory synchronously
 * @param from The source directory to move from
 * @param to The target directory to move to
 */
export declare function moveDirectoryRecursiveSync(from: string, to: string): void;
/**
 * Creates a symlink at `from` that points to `to`
 * @param to The thing you want to point to
 * @param from The thing you want to point from
 */
export declare function symlinkJunction(to: string, from: string): Promise<void>;
/**
 * Looks for the node_modules folder from basePath up to root.
 * returns the first occurrence of the node_modules, or null of none could be found.
 * @param basePath starting point
 */
export declare function findNodeModulesList(basePath: string, tempDirName?: string): Promise<string[]>;
//# sourceMappingURL=file-utils.d.ts.map