import { StrykerOptions } from '@stryker-mutator/api/core';
import { Logger } from '@stryker-mutator/api/logging';
import { StrictReporter } from '../reporters/strict-reporter';
import { InputFileCollection } from './input-file-collection';
export declare const IGNORE_PATTERN_CHARACTER = "!";
export declare const MUTATION_RANGE_REGEX: RegExp;
export declare class InputFileResolver {
    private readonly log;
    private readonly reporter;
    private readonly mutatePatterns;
    private readonly ignoreRules;
    static inject: ["logger", "options", "reporter"];
    constructor(log: Logger, { mutate, tempDirName, ignorePatterns }: StrykerOptions, reporter: StrictReporter);
    resolve(): Promise<InputFileCollection>;
    private resolveMutateFiles;
    private resolveMutationRange;
    /**
     * Takes a list of globbing patterns and expands them into files.
     * If a patterns starts with a `!`, it negates the pattern.
     * @param fileNames the file names to filter
     * @param patterns The patterns to expand into files
     * @param logAboutUselessPatterns Weather or not to log about useless patterns
     */
    private filterPatterns;
    private filterPattern;
    private resolveInputFiles;
    private reportAllSourceFilesRead;
    private reportSourceFilesRead;
    private readFiles;
    private readFile;
}
//# sourceMappingURL=input-file-resolver.d.ts.map