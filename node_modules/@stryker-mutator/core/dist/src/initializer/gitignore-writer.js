"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GitignoreWriter = void 0;
const tslib_1 = require("tslib");
const os_1 = (0, tslib_1.__importDefault)(require("os"));
const fs_1 = require("fs");
const plugin_1 = require("@stryker-mutator/api/plugin");
const config_1 = require("../config");
const _1 = require(".");
const GITIGNORE_FILE = '.gitignore';
class GitignoreWriter {
    constructor(out) {
        this.out = out;
    }
    async addStrykerTempFolder() {
        const defaultTempDirName = (0, config_1.defaultOptions)().tempDirName;
        if ((0, fs_1.existsSync)(GITIGNORE_FILE)) {
            const gitignoreContent = await fs_1.promises.readFile(GITIGNORE_FILE);
            if (!gitignoreContent.toString().includes(defaultTempDirName)) {
                const strykerTempFolderSpecification = `${os_1.default.EOL}# stryker temp files${os_1.default.EOL}${defaultTempDirName}${os_1.default.EOL}`;
                await fs_1.promises.appendFile(GITIGNORE_FILE, strykerTempFolderSpecification);
                this.out('Note: Your .gitignore file has been updated to include recommended git ignore patterns for Stryker');
            }
        }
        else {
            this.out('No .gitignore file could be found. Please add the following to your .gitignore file: *.stryker-tmp');
        }
    }
}
exports.GitignoreWriter = GitignoreWriter;
GitignoreWriter.inject = (0, plugin_1.tokens)(_1.initializerTokens.out);
//# sourceMappingURL=gitignore-writer.js.map