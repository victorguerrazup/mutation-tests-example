"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CircleProvider = void 0;
const object_utils_1 = require("../../utils/object-utils");
/**
 * https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
 */
class CircleProvider {
    determineProject() {
        return `${this.determineProvider()}/${this.determineRepository()}`;
    }
    determineVersion() {
        var _a, _b;
        return ((_b = (_a = (0, object_utils_1.undefinedEmptyString)((0, object_utils_1.getEnvironmentVariable)('CIRCLE_PR_NUMBER'))) !== null && _a !== void 0 ? _a : (0, object_utils_1.undefinedEmptyString)((0, object_utils_1.getEnvironmentVariable)('CIRCLE_BRANCH'))) !== null && _b !== void 0 ? _b : (0, object_utils_1.undefinedEmptyString)((0, object_utils_1.getEnvironmentVariable)('CIRCLE_TAG')));
    }
    determineRepository() {
        const username = (0, object_utils_1.getEnvironmentVariableOrThrow)('CIRCLE_PROJECT_USERNAME');
        const repoName = (0, object_utils_1.getEnvironmentVariableOrThrow)('CIRCLE_PROJECT_REPONAME');
        return `${username}/${repoName}`;
    }
    determineProvider() {
        // Repo url can be in 2 forms:
        // - 'git@github.com:company/repo.git'
        // - 'https://github.com/company/repo'
        // See https://discuss.circleci.com/t/circle-repository-url-changed-format-in-v2/15273
        const repoUrl = (0, object_utils_1.getEnvironmentVariableOrThrow)('CIRCLE_REPOSITORY_URL');
        if (repoUrl.startsWith('git@')) {
            return repoUrl.substr(4).split(':')[0];
        }
        else {
            return repoUrl.split('//')[1].split('/')[0];
        }
    }
}
exports.CircleProvider = CircleProvider;
//# sourceMappingURL=circle-provider.js.map